/* autogenerated by Processing revision 1292 on 2023-06-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Cube extends PApplet {

float inc = 0.01f;
sscube b;
PVector[] vectors = new PVector[10];
public void setup() {
    /* size commented out by preprocessor */; 
    b = new sscube();    
}
  
  public void draw(){
    translate(width/2,height/2);
    //inc +=0.001;
    rotateX(inc);
    rotateY(inc);
    background(155); 
    vectors[0] = new PVector(-76, -76, 76);
    vectors[1] = new PVector(0, -76, 76);
    vectors[2] = new PVector(76, -76, 76);
    vectors[3] = new PVector(-76, 0, 76);
    vectors[4] = new PVector(0, 0, 76);
    vectors[5] = new PVector(76, 0, 76);
    vectors[6] = new PVector(-76, 76, 76);
    vectors[7] = new PVector(0, 75, 76);
    vectors[8] = new PVector(76, 76, 76);
    //vectors[9] = new PVector(-75, 75, 70);
    //for(int i = 0; i < 9; i++){
    //line(0,0,0,vectors[i].x,vectors[i].y,vectors[i].z);
    //b.sface(vectors[i]);
    //}
    b.ccube1(vectors[0]);
    b.ccube2(vectors[2]);
  }
  
  //translate(width/2,height/2);
  //PVector[] vectors = new PVector[54];
  //vectors[0] = new PVector(100, 0, 100);
  //vectors[1] = new PVector(0, 0, 100);
  //vectors[2] = new PVector(-100, 0, 100);
  //vectors[3] = new PVector(100, 100, 100);
  //vectors[4] = new PVector(0, 100, 100);
  //vectors[5] = new PVector(-100, 100, 100);
  //line(500,0,-500,0);
  //line(0,500,0,-500);
    
  //line(0,0,0,vectors[0].x,vectors[0].y,vectors[0].z);
  //line(0,0,0,vectors[1].x,vectors[1].y,vectors[1].z);
  //line(0,0,0,vectors[2].x,vectors[2].y,vectors[2].z);
  //line(0,0,0,vectors[3].x,vectors[3].y,vectors[3].z);
  //line(0,0,0,vectors[4].x,vectors[4].y,vectors[4].z);
  //line(0,0,0,vectors[5].x,vectors[5].y,vectors[5].z);  
  //b.display();
  //b.leftface();
  //rect(0,0,50,50);
class sscube {

//float a, b, c, d;

//this is an constructur (where an object is born)(its name must matchclass name)
//sscube(a, b, c, d){
//    rect(a, b, c, d); 
//}
//void sface(PVector vector){
//   rect(vector.x - 20, vector.y - 20, 50, 50);
    
//}
//void faceL(PVector vec){
//    pushMatrix();
//    translate(-97,0);
//    rotateY(PI/2);
//   rect(vec.x - 20, vec.y - 20, 50, 50);
    //line(-97, -100, -97, 100);
//    popMatrix();
//}

public void ccube1(PVector vec){
    pushMatrix();
    translate(0, 0, 76);
    rect(vec.x,vec.y,50,50);
    popMatrix();
    pushMatrix();
    translate(-76, -76, 76);
    rotateY(PI/2);
    rect(0,0,50,50);
    popMatrix();
    pushMatrix();
    translate(-76, -76, 76);
    rotateX(3*PI/2);
    rect(0,0,50,50);
    popMatrix();
}

public void ccube2(PVector vec){
    pushMatrix();
    translate(0, 0, 76);
    //scale(0, 0, 0);
    rect(vec.x - 50, vec.y , 50, 50);
    popMatrix();
    pushMatrix();
    translate(76, -76, 76);
    rotateY(PI/2);
    rect(0,0,50,50);
    popMatrix();
    pushMatrix();
    translate(76, -76, 76);
    rotateX(3*PI/2);
    rect(-50,0,50,50);
    popMatrix();
}



}
//void leftface(){
    //pushMatrix();
//    translate(0, 300, 0);
//    rotateY(PI/2);
    //popMatrix();
    
//}
//void display(){
//stroke(0);
//fill(127);
//ellipse(50, 50, 63, 50);
//}
//}


  public void settings() { size(600, 600, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Cube" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
